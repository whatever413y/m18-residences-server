generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id         Int                  @id @default(autoincrement())
  name       String               @unique
  rent       Int
  created_at DateTime             @default(now())
  updated_at DateTime             @updatedAt
  readings   ElectricityReading[]
  tenants    Tenant[]

  @@map("Rooms")
}

model Tenant {
  id         Int                  @id @default(autoincrement())
  room_id    Int
  name       String               @unique
  is_active  Boolean              @default(true)
  join_date  DateTime             @default(now())
  created_at DateTime             @default(now())
  updated_at DateTime             @updatedAt
  bills      Bill[]
  readings   ElectricityReading[]
  room       Room                 @relation(fields: [room_id], references: [id])

  @@map("Tenants")
}

model ElectricityReading {
  id           Int      @id @default(autoincrement())
  tenant_id    Int
  room_id      Int
  prev_reading Int
  curr_reading Int
  consumption  Int
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  bill         Bill?
  room         Room     @relation(fields: [room_id], references: [id])
  tenant       Tenant   @relation(fields: [tenant_id], references: [id])

  @@map("Electricity_Readings")
}

model Bill {
  id                 Int                @id @default(autoincrement())
  reading_id         Int                @unique(map: "Bills_readingId_key") @map("reading_id")
  tenant_id          Int
  room_charges       Int                @default(0)
  electric_charges   Int                @default(0)
  total_amount       Int
  receipt_url        String?
  paid               Boolean            @default(false)
  created_at         DateTime           @default(now())
  updated_at         DateTime           @updatedAt
  additional_charges AdditionalCharge[]
  reading            ElectricityReading @relation(fields: [reading_id], references: [id], map: "Bills_readingId_fkey")
  tenant             Tenant             @relation(fields: [tenant_id], references: [id])

  @@map("Bills")
}

model AdditionalCharge {
  id          Int      @id @default(autoincrement())
  bill_id     Int
  amount      Int      @default(0)
  description String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  bill        Bill     @relation(fields: [bill_id], references: [id], onDelete: Cascade)

  @@map("Additional_Charges")
}
