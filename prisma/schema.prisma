generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  rent      Int      
  tenants   Tenant[]
  readings  ElectricityReading[]
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@map("Rooms")
}

model Tenant {
  id        Int        @id @default(autoincrement())
  roomId    Int        @map("room_id")
  name      String     @unique
  isActive  Boolean    @default(true)
  room      Room       @relation(fields: [roomId], references: [id])
  readings  ElectricityReading[]
  bills     Bill[]
  joinDate  DateTime   @default(now()) @map("join_date")
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@map("Tenants")
}


model ElectricityReading {
  id          Int      @id @default(autoincrement())
  tenantId    Int      @map("tenant_id")
  roomId      Int      @map("room_id")
  prevReading Int      @map("prev_reading")
  currReading Int      @map("curr_reading")
  consumption Int      
  tenant      Tenant   @relation(fields: [tenantId], references: [id])
  room        Room     @relation(fields: [roomId], references: [id])
  bill        Bill?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("Electricity_Readings")
}

model Bill {
  id              Int                 @id @default(autoincrement())
  readingId       Int                 @unique
  tenantId        Int                 @map("tenant_id")
  roomCharges     Int                 @default(0) @map("room_charges")
  electricCharges Int                 @default(0) @map("electric_charges")
  totalAmount     Int                 @map("total_amount")
  receiptUrl      String?             @map("receipt_url")
  paid            Boolean             @default(false)
  reading         ElectricityReading  @relation(fields: [readingId], references: [id])
  tenant          Tenant              @relation(fields: [tenantId], references: [id])
  additionalCharges AdditionalCharge[]
  createdAt       DateTime            @default(now()) @map("created_at")
  updatedAt       DateTime            @updatedAt @map("updated_at")

  @@map("Bills")
}

model AdditionalCharge {
  id          Int     @id @default(autoincrement())
  billId      Int     @map("bill_id")
  amount      Int     @default(0)
  description String 
  bill        Bill    @relation(fields: [billId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("Additional_Charges")
}